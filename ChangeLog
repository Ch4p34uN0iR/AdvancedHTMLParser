* 6.4.0 Oct 15 2015
- Fix typo in formatter in MultipleRootNode case
- Fix encoding issue in parsing files (non-utf-8/ascii)
- Support providing an encoding to "formatHTML"
- When parsing, drop stray end-tags instead of crashing
- Strip internet explorer conditionals from the document, and optionally add a
blank <html> since that's where they usually are.
- Take into account doctype when inserting top-node on multiple-root-node case

* 6.3.0 Sep 03 2015
- Clarify that a set is better to use for getElementsWithAttrValues as the "attrValues" portion. If used within "Parser" -- make this conversion for them,
  as this is the most common case, and the only one-time-test case. Maybe worth splitting public and private methods to handle such microoptimizations in
  the future
- Support filtering on a custom function. Added "getElementsCustomFilter" to Parser, TagCollection, and AdvancedTag. With Tests.
- Support filtering the direct members of a TagCollection, using filterCollection method. Does not transverse to children. 
- Add AdvancedTag and TagCollection to __init__ (for "from AdvancedHTMLParser import *") 
- Add an integer version tuple, __int_version_tuple__ for easier comparison
- A couple micro optimizations
- Manually cleanup doc a bit

* 6.2.5 Aug 17 2015
- Fix style and class attributes not showing up in outerHTML
- Allow formatHTML script to read from stdin
- Cleanup setup.py to read description from file
- Fix MANIFEST.in

* 6.2.2 Aug 17 2015
- Enable tests that weren't running
- Unify calling .get('key') or ['key'] for tag attributes
- Fix using 'className' with get/set attribute

* 6.2.1 Aug 10 2015
- Add a lot more tests and  provide exception messages to assert keywords
(supported in GoodTests)
- Better error message when trying to set various attributes directly
- Add "setAttributes"  method that takes a dict and allows setting many
attributes at once
- Added nextSibling, nextSiblingElement, previousSibling, previousSiblingElement
- Added insertBefore and insertAfter (latter not present in HTML)

* 6.1.0 Aug 5 2015
- Fix issue where root node  would not get matched in some conditions
- Implement some real tests using GoodTests
- Much better handling of special attributes through a dedicated extension of
dict
- Ability to use "style" in the same way javascript allows, like
element.style.position = 'absolute'
- Various cleanups

* 6.1.0 prerelease July 27 2015
- More intuitive usage  with multiple root-level nodes (like parsing an AJAX
request). Add `getRootNodes` function to return a list of root nodes, and
abstracted a little magic of the previous handling of multiple root nodes.
They always worked before, but easier to work WITH now.
- Add "removeAttribute" function to remove an attribute
- Implement "setStyle" "setStyles" and "getStyle" - for working with the
"style" string. I will probably turn this into a real object extending str
before the release, but I'm tired now and going to bed.

* 6.0.1 June 27 2015
- Add more docstrings and add pydoc documentation

* 6.0.0 June 23 2015
- Split Indexing out into new IndexedAdvancedHTMLParser class to greatly
simplify the base class.
- Get rid of the onlyIndex* on the default constructor of
IndexedAdvancedHTMLParser, make all fields indexed by default, and add
useIndex to every get* method which can be set to False to ignore the index
- Add an indexed_example
- Modify example to include addition of element
- Split source into several files
- Simplify a few sections
- Ensure formatHTML ends with a newline

* 5.0.1 June 10 2015
 - Add AdvancedHTMLFormatter class and formatHTML Script
 - Add getFormattedHTML to AdvancedHTMLParser
 - Fix (invalid for html, but okay for subsections) multiple root node support
 - Auto-set isSelfClosing on an AdvancedTag when they are created ad-hoc.

* 4.0.1 June 9 2015
 - Also add input, img, hr, br to self-closing tags and make a set

* 4.0.0 June 9 2015
 - Fix handling of entities, character refs and comments
 - Add support for including doctype
 - Fix issues with getHTML
 - Implicitly close "meta" and "link" tags if they are not self-closed.
 - Better-support self-closing tags overall
 - Handle people who do not close child tags before closing parent
 - Unicode support
